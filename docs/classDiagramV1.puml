@startuml
'https://plantuml.com/class-diagram


class Main {
+main(String[] args)
}

package utilities {
    class SVG {
    - StringBuilder svg
    + SVG(int x, int y, String viewBox, String width, String height)
    + addRectangle(int x, int y, double height, double width, String style)
    + addLine(int x1, int y1, int x2, int y2, String style)
    + addArrow(int x1, int y1, inx x2, int y2, String style)
    + addText(int x, int y, int rotation, String text)
    + addSvg(Svg innerSvg)
    'Override
    + toString()
    }
    class SendGrid
    {
    - String API_KEY
    - String salespersonEmail
    - String customerEmail
    - String adminEmail
    - String subjectLine
    - String body
    + SendGrid(String to, String name, String from)
    }
}

package controllers {
    class OrderController {
    + addRoutes()
    - boolean validateOrderIsPaid()
    - void requestPaymentByID()
    - void confirmPaymentByID()
    }

    class AccountController {
    + addRoutes()
    - User login()
    - void logout()

    }
    class MaterialController {
    - Carport carport
    - SendGrid email
    - SVG svg
    + addRoutes()
    - List<Product> getProductListByOrderLineID()
    }
}

package entities {
    class Carport
    {
    + Carport(int length, int width)
    + List<Material> materials
    + int calcCarport(List<Material> materials)
    + Material calcPosts(List<Material> materials)
    + Product calcBeams(List<Material> materials)
    + Product calcRafters(List<Material> materials)
    + Material getRafters()
    + Material getBeams()
    + Material getPosts()
    'List<Product> calcBOM(User user, List<Product> products)
    'List<Product> calculateProductList(int posts, int beams, int rafters)
    }
    class Account {
    - int accountId
    - String role
    - String username
    - String password
    - int telephone
    - String email
    - String address

    + int getUserID()
    + String getRole()
    + String getUsername()
    + String getPassword()
    + int getTelephoneNum()
    + String getAddress()
    }

    class Order {
    - int orderID
    - int customerId
    - carportId
    '- String name
    'ordrestatus
    '- String status
    - TimeStamp orderPlaced
    - boolean orderPaid
    '- TimeStamp orderComplete
    - Carport carport
    + getters()
    }

    class Product {
    - int productID
    - String productName
    - String description
    }
    class ProductVariant {
    -Integer productVariantID
    - BigDecimal price
    - String unit
    - int quantity
    - int length
    }
    class Shed {
    - int width
    - int length
    }
    enum RoofType {
    FLAT,
    PITCHED
    }
    class Roof
    {
    - int roofLengt
    - int roofWidth
    - final RoofType type
    }
    class MaterialController {
    - List<Product> productList
    + List<Product> getProductList()
    }


}

package exceptions {
    class DatabaseException
    {
    + DatabaseException()
    + DatabaseException()
    }
}

package persistence {
    class ConnectionPool {
    +ConnectionPool instance
    +HikariDataSource ds
    'Ved ikke om de skal v√¶re static eller ej^
    +getInstance()
    +getConnection()
    +close()
    -createHikariConnectionPool
    }

    class OrderMapper {
    + Order getOrder()
    + List<Order> getOrderByUserID(int userID)
    + List<Order> getAllOrders()
    + OrderLine getOrderLineByOrderID()
    + void deleteOrderByID(int userID, int orderID)
    + void updateOrderByUserID(OrderLine orderLine)
    + void addOrderToDB(Order order, OrderLine orderLine)
    }

    class MaterialMapper {
    + product getMaterial()
    + product getMaterialbyId(int materialId)
    + void updateMaterial(Material material)
    + void addProductToDB(Product product)
    + void deleteMaterial(int productID)
    + List<Material> getAllMaterials()
    }

    class AccountMapper {
    + void addAccount()
    + void deleteAccount()
    + void updateAccounnt()
    + User getAccountByOrderID()
    + List<User> getAllAccounts()
    + void login()
    }
}

package config {
    class ThymeLeafConfig {
    + templateEngine()
    }
    class Sessionconfig {
    }
}

package Test {
    class OrderMapperTest {
    }
    class MaterialMapperTest {
    }
    class AccountMapperTest {
    }
}

Main -- controllers

OrderController -- OrderMapper
MaterialController -- MaterialMapper
AccountController -- AccountMapper


Product o-- ProductVariant

Carport o-- Shed
Carport *-- Roof
Carport *-- Product
Roof *-- RoofType




@enduml